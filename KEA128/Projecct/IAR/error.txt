/**********************************************************
**0000000000000000000000000000000000000000000000000000000**
**00                                                   00**
**00            东秦节能二队专用库文件                 00**
**00         队员 ：杨丰辰 武卓然 杨令闻               00**
**0000000000000000000000000000000000000000000000000000000**
**00            函数作用：  计算偏差                   00**
**00            修改时间： 2018.3.9                    00**
**0000000000000000000000000000000000000000000000000000000**
**********************************************************/


#include "headfile.h"

/**************变量**************/
extern uint16_t adc_guiyi[6];
extern uint16_t adc_judge_filter[6];
extern uint16_t adc_get[6];
extern float guiyi_left;
extern float guiyi_right;
extern uint16_t bbtime;
///////////////////////////
#define HDTIME 70  //450
uint8_t huandao_judge_time = 0;
uint16_t huandao_open_l = 0;
uint16_t huandao_open_r = 0;
uint16_t huandao_open_again = 0;
/**************定义**************/
float car_error[15] = {0};
float sqrt0 = 0.0,sqrt1 = 0.0;  
/**************函数**************/
void justdo_error(void)
{
//***环岛判断***
  if(huandao_open_again <= 0 && huandao_open_l == 0 && huandao_open_r == 0)
  {
    //左环岛判断
    if( (adc_judge_filter[0]+adc_judge_filter[1])>7000  && adc_get[2]>180 ) //&& (adc_judge_filter[0]-adc_judge_filter[5])>0
    {
      huandao_open_l = HDTIME;
      bbtime = 5;
    }
    //右环岛判断
    if( (adc_judge_filter[5]+adc_judge_filter[4])>7000  && adc_get[3]>180) //&& (adc_judge_filter[5]-adc_judge_filter[0])>0
    {
      huandao_open_r = HDTIME;
      bbtime = 5;
    }
  }
  
//计算偏差
  sqrt0 = sqrt(guiyi_left);
  sqrt1 = sqrt(guiyi_right);
  car_error[0] =(float)( (sqrt0-sqrt1)/(guiyi_left + guiyi_right) );
  car_error[0] = (float)(car_error[0]*100);
  
//数据异常
  if( car_error[0] - car_error[1] > 100 || car_error[0] - car_error[1] < -100 )  
        car_error[0] = car_error[1];
  
  
////***十字判断***
//  if(adc_get[2] > 300 && adc_get[3] > 300)
//  {
//    bbtime = 5;
//    guiyi_left = adc_guiyi[2];
//    guiyi_right = adc_guiyi[3];
//  }
  
//***环岛执行***  
//左执行
  if(huandao_open_l > 0)
  {
    car_error[0] = 14;
    huandao_open_l --;
    bbtime = 5;
    huandao_open_again = 1000;
  }
//右执行
  if(huandao_open_r > 0)
  {
    car_error[0] = -14;
    huandao_open_r --;
    bbtime = 5;
    huandao_open_again = 1000;
  }
//避免重复入环
  if(huandao_open_again > 0)
    huandao_open_again --;
  
//偏差队列
  car_error[14] = car_error[13];
  car_error[13] = car_error[12];
  car_error[12] = car_error[11];
  car_error[11] = car_error[10];
  car_error[10] = car_error[9];
  car_error[9] = car_error[8];
  car_error[8] = car_error[7];
  car_error[7] = car_error[6];
  car_error[6] = car_error[5];
  car_error[5] = car_error[4];
  car_error[4] = car_error[3];
  car_error[3] = car_error[2];
  car_error[2] = car_error[1];
  car_error[1] = car_error[0];
} 

////////////////////////////////////////////////////////
//******************以下显示当前函数******************//
////////////////////////////////////////////////////////
uint8_t error_test_1[30]="";
uint8_t error_test_2[30]="";
uint8_t error_test_3[30]="";
uint8_t error_test_4[30]="";
uint8_t error_test_5[30]="";
uint8_t error_test_6[30]="";
void error_print(void)
{
  sprintf((char*)error_test_1,"ERROR:");
  OLED_P6x8Str(0,1,error_test_1);
  sprintf((char*)error_test_2,"AD0:%4d,AD5:%4d",adc_judge_filter[0],adc_judge_filter[5]);
  OLED_P6x8Str(0,2,error_test_2);
  sprintf((char*)error_test_3,"AD1:%4d,AD4:%4d",adc_judge_filter[1],adc_judge_filter[4]);
  OLED_P6x8Str(0,3,error_test_3);
  sprintf((char*)error_test_4,"gyL:%4d,gyR:%4d",(uint16_t)guiyi_left,(uint16_t)guiyi_right);
  OLED_P6x8Str(0,4,error_test_4);
    
  if(car_error[0] >= 0)
    sprintf((char*)error_test_5,"ERR[0]*100: %4f",car_error[0]);
  else
    sprintf((char*)error_test_5,"ERR[0]*100:-%4f",(0-car_error[0]));
  OLED_P6x8Str(0,5,error_test_5);
}

uint8_t panduan_1[20]="";
uint8_t panduan_2[20]="";
uint8_t panduan_3[20]="";
uint8_t panduan_4[20]="";
uint8_t panduan_5[20]="";
uint8_t panduan_6[20]="";
void panduan_printf(void)
{
  sprintf((char*)panduan_1,"JUDGE");
  OLED_P6x8Str(0,1,panduan_1);
  sprintf((char*)panduan_2,"adc0:%4d adc5:%4d",adc_judge_filter[0],adc_judge_filter[5]);
  OLED_P6x8Str(0,2,panduan_2);
  sprintf((char*)panduan_3,"adc1:%4d adc4:%4d",adc_judge_filter[1],adc_judge_filter[4]);
  OLED_P6x8Str(0,3,panduan_3);
  sprintf((char*)panduan_4,"adc2:%4d adc3:%4d",adc_judge_filter[2],adc_judge_filter[3]);
  OLED_P6x8Str(0,4,panduan_4);
  sprintf((char*)panduan_5,"Open_l:%4d",huandao_open_l);
  OLED_P6x8Str(0,5,panduan_5);
  sprintf((char*)panduan_6,"Open_r:%4d",huandao_open_r);
  OLED_P6x8Str(0,6,panduan_6);
}